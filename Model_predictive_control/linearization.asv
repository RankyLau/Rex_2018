clear;
close all;
clc;

addpath('./Quadrotor Model-2D');

x_equ = [0 0 0 0 0 0]';
u_equ = [500 500]';
num_state = 6;
num_u = 2;

t = 0;
e_state = eye(num_state);
e_u = eye(num_u);

h = 0.1;

for i = 1:(num_state)
    dsys_in = quadrotor_model_2d(x_equ + e_state(:,i)*h, t, u_equ) - quadrotor_model_2d(x_equ - e_state(:,i)*h, t, u_equ);
    A(:,i) = (dsys_in(1:num_state))/(2*h);
end

h = 1;
for i = 1:(num_u)
    dsys_in = quadrotor_model_2d(x_equ + e_state(:,i)*h, t, u_equ) - quadrotor_model_2d(x_equ - e_state(:,i)*h, t, u_equ)
    A(:,i) = (dsys_in(1:num_state))/(2*h);
end


C = eye(num_state);
D = zeros(num_state,num_u);
sys = ss(A,B,C,D);
% % minreal(sys);
% R = eye(4);
% K = lqr(A,B,Q,R);
% % eig(A-B*K)
%x0l = x0_e(1:num_state);
h = 1;
hu = 0.05;
x0l = ones(num_state, 1)*h;
x0n = x_equ + h;
for i = num_state + 1 : num_state + num_u
    x0n(i) = x0n(i) - h + hu 
end
%t = linspace(0,60*6*24*2,10^3);
t = linspace(t,t+60*60,10^2);
for i = 1:length(t) 
    u(:,i) = ones(5,1).*x0_e(num_state + 1 : num_state + 5)';
    %u(:,i) = u0_e;
end
[yl,tl,xl] = lsim(sys,u,t,x0l);

options = odeset('RelTol',1e-8);
[tn, xn]=ode45(@system_ITHS,t, x0n,options);

for m = 1:num_state
    
    figure
    plot(xl(:,m));
    hold on
    plot(xn(:,m) - x_equ(m));
    %axis equal

end

save linear A B
restoredefaultpath